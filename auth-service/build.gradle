plugins {
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'java'
    id 'org.jooq.jooq-codegen-gradle' version '3.19.10'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-jooq'
    implementation 'org.springframework.security:spring-security-oauth2-authorization-server:1.3.1'

    runtimeOnly 'com.h2database:h2'

    // jOOQ codegen dependencies for Liquibase-based generation
    jooqCodegen 'org.jooq:jooq-meta-extensions-liquibase:3.19.10'
    jooqCodegen 'org.liquibase:liquibase-core:4.29.2'
    jooqCodegen 'com.h2database:h2:2.2.224'
    jooqCodegen files('src/main/resources')

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

jooq {
    configuration {
        logging = 'WARN'
        jdbc {
            driver = 'org.h2.Driver'
            url = 'jdbc:h2:mem:jooqcodegen;DB_CLOSE_DELAY=-1'
            user = 'sa'
            password = ''
        }
        generator {
            name = 'org.jooq.codegen.DefaultGenerator'
            database {
                name = 'org.jooq.meta.extensions.liquibase.LiquibaseDatabase'
                properties {
                    property {
                        key = 'classpath'
                        value = project.projectDir.toString()
                    }
                    property {
                        key = 'searchPath'
                        value = "${project.projectDir},${project.projectDir}/src/main/resources"
                    }
                    property {
                        key = 'scripts'
                        value = 'db/changelog/db.changelog.xml'
                    }
                    property {
                        key = 'includeLiquibaseTables'
                        value = 'false'
                    }
                }
            }
            generate {
                pojos = true
                daos = false
                records = true
            }
            target {
                packageName = 'com.sentitone.database.security'
                directory = "$buildDir/generated-src/jooq/main"
            }
        }
    }
}

sourceSets {
    main {
        java {
            srcDir "$buildDir/generated-src/jooq/main"
        }
    }
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
}
